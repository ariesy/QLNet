//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:2.0.50727.3074
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

// Nome file originale:
// Data di generazione: 27/04/2009 16.30.29
namespace QSilver.Modules.News.QSilverSvc
{
    
    /// <summary>
    /// Nessun commento per QSilverEntities nello schema.
    /// </summary>
    public partial class QSilverEntities : global::System.Data.Services.Client.DataServiceContext
    {
        /// <summary>
        /// Inizializzare un nuovo oggetto QSilverEntities.
        /// </summary>
        public QSilverEntities(global::System.Uri serviceRoot) : 
                base(serviceRoot)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Lo spazio dei nomi configurato per il riferimento al servizio
        /// in Visual Studio è diverso da quello indicato nello schema
        /// del server, pertanto utilizzare le utilità di mapping dei tipi per eseguire il mapping tra i due spazi dei nomi.
        /// </summary>
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            if (typeName.StartsWith("QSilverModel", global::System.StringComparison.Ordinal))
            {
                return this.GetType().Assembly.GetType(string.Concat("QSilver.Modules.News.QSilverSvc", typeName.Substring(12)), true);
            }
            return null;
        }
        /// <summary>
        /// Lo spazio dei nomi configurato per il riferimento al servizio
        /// in Visual Studio è diverso da quello indicato nello schema
        /// del server, pertanto utilizzare le utilità di mapping dei tipi per eseguire il mapping tra i due spazi dei nomi.
        /// </summary>
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            if (clientType.Namespace.Equals("QSilver.Modules.News.QSilverSvc", global::System.StringComparison.Ordinal))
            {
                return string.Concat("QSilverModel.", clientType.Name);
            }
            return null;
        }
        /// <summary>
        /// Nessun commento per news nello schema.
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<news> news
        {
            get
            {
                if ((this._news == null))
                {
                    this._news = base.CreateQuery<news>("news");
                }
                return this._news;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<news> _news;
        /// <summary>
        /// Nessun commento per test nello schema.
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<test> test
        {
            get
            {
                if ((this._test == null))
                {
                    this._test = base.CreateQuery<test>("test");
                }
                return this._test;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<test> _test;
        /// <summary>
        /// Nessun commento per news nello schema.
        /// </summary>
        public void AddTonews(news news)
        {
            base.AddObject("news", news);
        }
        /// <summary>
        /// Nessun commento per test nello schema.
        /// </summary>
        public void AddTotest(test test)
        {
            base.AddObject("test", test);
        }
    }
    /// <summary>
    /// Nessun commento per QSilverModel.news nello schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("Id")]
    public partial class news
    {
        /// <summary>
        /// Crea un nuovo oggetto news.
        /// </summary>
        /// <param name="ID">Valore iniziale di Id.</param>
        public static news Createnews(int ID)
        {
            news news = new news();
            news.Id = ID;
            return news;
        }
        /// <summary>
        /// Nessun commento per la proprietà Body nello schema.
        /// </summary>
        public string Body
        {
            get
            {
                return this._Body;
            }
            set
            {
                this.OnBodyChanging(value);
                this._Body = value;
                this.OnBodyChanged();
            }
        }
        private string _Body;
        partial void OnBodyChanging(string value);
        partial void OnBodyChanged();
        /// <summary>
        /// Nessun commento per la proprietà IconUri nello schema.
        /// </summary>
        public string IconUri
        {
            get
            {
                return this._IconUri;
            }
            set
            {
                this.OnIconUriChanging(value);
                this._IconUri = value;
                this.OnIconUriChanged();
            }
        }
        private string _IconUri;
        partial void OnIconUriChanging(string value);
        partial void OnIconUriChanged();
        /// <summary>
        /// Nessun commento per la proprietà Id nello schema.
        /// </summary>
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// Nessun commento per la proprietà Module nello schema.
        /// </summary>
        public string Module
        {
            get
            {
                return this._Module;
            }
            set
            {
                this.OnModuleChanging(value);
                this._Module = value;
                this.OnModuleChanged();
            }
        }
        private string _Module;
        partial void OnModuleChanging(string value);
        partial void OnModuleChanged();
        /// <summary>
        /// Nessun commento per la proprietà PublishedDate nello schema.
        /// </summary>
        public global::System.Nullable<global::System.DateTime> PublishedDate
        {
            get
            {
                return this._PublishedDate;
            }
            set
            {
                this.OnPublishedDateChanging(value);
                this._PublishedDate = value;
                this.OnPublishedDateChanged();
            }
        }
        private global::System.Nullable<global::System.DateTime> _PublishedDate;
        partial void OnPublishedDateChanging(global::System.Nullable<global::System.DateTime> value);
        partial void OnPublishedDateChanged();
        /// <summary>
        /// Nessun commento per la proprietà Title nello schema.
        /// </summary>
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                this.OnTitleChanging(value);
                this._Title = value;
                this.OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
    }
    /// <summary>
    /// Nessun commento per QSilverModel.test nello schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("Id")]
    public partial class test
    {
        /// <summary>
        /// Crea un nuovo oggetto test.
        /// </summary>
        /// <param name="ID">Valore iniziale di Id.</param>
        public static test Createtest(int ID)
        {
            test test = new test();
            test.Id = ID;
            return test;
        }
        /// <summary>
        /// Nessun commento per la proprietà Id nello schema.
        /// </summary>
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// Nessun commento per la proprietà Value nello schema.
        /// </summary>
        public string Value
        {
            get
            {
                return this._Value;
            }
            set
            {
                this.OnValueChanging(value);
                this._Value = value;
                this.OnValueChanged();
            }
        }
        private string _Value;
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
    }
}
